CascadeMinimizer.cc[188] : (in function: improveOnce) - Minimization configured with Type=Minuit2, Algo=Migrad, strategy=0, tolerance=0.1
CascadeMinimizer.cc[215] : (in function: improveOnce) - Minimization finished with status=0
CascadeMinimizer.cc[219] : (in function: improveOnce) - Minimization success! status=0
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_LOW_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_SIG_obsOnly: in 6 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_HIGH_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_LOW_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_SIG_obsOnly: in 6 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_HIGH_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
AsymptoticLimits.cc[428] : (in function: runLimitExpected) - Median for expected limits = 0.000839233, Sigma for expected limits = 0.000428188
AsymptoticLimits.cc[191] : (in function: runLimit) - NLL at global minimum of data = -647118 (r=3.22699e-09)
AsymptoticLimits.cc[211] : (in function: runLimit) - NLL at global minimum of asimov = -647103 (r=3.14e-06)
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.200000:	q_mu = 35924.34306	q_A  = 35803.43533	Pmu = 0.00000	1-Pb  = 0.37468	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.600000:	q_mu = 16891.61383	q_A  = 16794.30963	Pmu = 0.00000	1-Pb  = 0.35367	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.300000:	q_mu = 7859.88601	q_A  = 7790.51631	Pmu = 0.00000	1-Pb  = 0.34717	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.150000:	q_mu = 3594.80229	q_A  = 3550.97382	Pmu = 0.00000	1-Pb  = 0.35653	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.075000:	q_mu = 1637.64392	q_A  = 1607.65125	Pmu = 0.00000	1-Pb  = 0.35420	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.037500:	q_mu = 753.53691	q_A  = 731.99020	Pmu = 0.00000	1-Pb  = 0.34524	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.018750:	q_mu = 341.92877	q_A  = 327.39283	Pmu = 0.00000	1-Pb  = 0.34396	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.009375:	q_mu = 147.81319	q_A  = 138.15603	Pmu = 0.00000	1-Pb  = 0.34061	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.004688:	q_mu = 61.29449	q_A  = 54.57911	Pmu = 0.00000	1-Pb  = 0.32474	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.002344:	q_mu = 24.77609	q_A  = 19.97587	Pmu = 0.00000	1-Pb  = 0.29563	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.001172:	q_mu = 10.01002	q_A  = 6.71113	Pmu = 0.00062	1-Pb  = 0.26216	CLs  = 0.00238
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000586:	q_mu = 4.15509	q_A  = 2.06692	Pmu = 0.01524	1-Pb  = 0.23385	CLs  = 0.06515
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000879:	q_mu = 6.91691	q_A  = 4.15861	Pmu = 0.00331	1-Pb  = 0.24943	CLs  = 0.01326
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000732:	q_mu = 5.49059	q_A  = 3.04770	Pmu = 0.00723	1-Pb  = 0.24207	CLs  = 0.02988
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000655:	q_mu = 4.77286	q_A  = 2.51185	Pmu = 0.01078	1-Pb  = 0.23783	CLs  = 0.04531
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000626:	q_mu = 4.51258	q_A  = 2.32240	Pmu = 0.01246	1-Pb  = 0.23620	CLs  = 0.05277
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000640:	q_mu = 4.63776	q_A  = 2.41316	Pmu = 0.01162	1-Pb  = 0.23699	CLs  = 0.04903
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000634:	q_mu = 4.58595	q_A  = 2.37551	Pmu = 0.01196	1-Pb  = 0.23666	CLs  = 0.05054
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000637:	q_mu = 4.61106	q_A  = 2.39375	Pmu = 0.01179	1-Pb  = 0.23682	CLs  = 0.04981
