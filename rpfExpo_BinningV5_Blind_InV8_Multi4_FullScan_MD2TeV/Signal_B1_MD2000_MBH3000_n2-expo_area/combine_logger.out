CascadeMinimizer.cc[188] : (in function: improveOnce) - Minimization configured with Type=Minuit2, Algo=Migrad, strategy=0, tolerance=0.1
CascadeMinimizer.cc[215] : (in function: improveOnce) - Minimization finished with status=0
CascadeMinimizer.cc[219] : (in function: improveOnce) - Minimization success! status=0
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_LOW_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_SIG_obsOnly: in 6 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_HIGH_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_LOW_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_SIG_obsOnly: in 6 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_HIGH_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
AsymptoticLimits.cc[428] : (in function: runLimitExpected) - Median for expected limits = 0.000133514, Sigma for expected limits = 6.81208e-05
AsymptoticLimits.cc[191] : (in function: runLimit) - NLL at global minimum of data = -1.26532e+07 (r=2.34625e-06)
AsymptoticLimits.cc[211] : (in function: runLimit) - NLL at global minimum of asimov = -1.26533e+07 (r=5.80354e-07)
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.200002:	q_mu = 11458819.83773	q_A  = 11458824.80244	Pmu = 0.00000	1-Pb  = 0.50029	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.600002:	q_mu = 5082853.32435	q_A  = 5082851.36878	Pmu = 0.00000	1-Pb  = 0.49983	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.300002:	q_mu = 2170488.39161	q_A  = 2170434.88194	Pmu = 0.00000	1-Pb  = 0.49276	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.150002:	q_mu = 887157.27073	q_A  = 872675.10234	Pmu = 0.00000	1-Pb  = 0.00000	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.075002:	q_mu = 414021.28736	q_A  = 329417.87335	Pmu = 0.00000	1-Pb  = 0.00000	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.037502:	q_mu = 297729.85978	q_A  = 110727.81288	Pmu = 0.00000	1-Pb  = 0.00000	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.018752:	q_mu = 318375.85070	q_A  = 35643.70034	Pmu = 0.00000	1-Pb  = 0.00000	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.009377:	q_mu = 415711.72325	q_A  = 11438.18482	Pmu = 0.00000	1-Pb  = 0.00000	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.004690:	q_mu = 551468.71077	q_A  = 3379.51428	Pmu = 0.00000	1-Pb  = 0.00000	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.002346:	q_mu = 705368.71213	q_A  = 948.73988	Pmu = 0.00000	1-Pb  = 0.00000	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.001174:	q_mu = 868192.19842	q_A  = 271.38186	Pmu = 0.00000	1-Pb  = 0.00000	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000588:	q_mu = 1035288.58494	q_A  = 72.13416	Pmu = 0.00000	1-Pb  = 0.00000	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000295:	q_mu = 1204152.35135	q_A  = 18.42604	Pmu = 0.00000	1-Pb  = 0.00000	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000149:	q_mu = 1373169.32975	q_A  = 4.68279	Pmu = 0.00000	1-Pb  = 0.00000	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000076:	q_mu = 1540831.91050	q_A  = 1.20534	Pmu = 0.00000	1-Pb  = 0.00000	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000039:	q_mu = 1705069.77782	q_A  = 0.31972	Pmu = 0.00000	1-Pb  = 0.00000	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000021:	q_mu = 1862519.52124	q_A  = 0.08968	Pmu = 0.00000	1-Pb  = 0.00000	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000012:	q_mu = 2007841.84858	q_A  = 0.10708	Pmu = 0.00000	1-Pb  = 0.00000	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000007:	q_mu = 2133812.94923	q_A  = 0.01000	Pmu = 0.00000	1-Pb  = 0.00000	CLs  = 0.00000
