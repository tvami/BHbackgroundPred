CascadeMinimizer.cc[188] : (in function: improveOnce) - Minimization configured with Type=Minuit2, Algo=Migrad, strategy=0, tolerance=0.1
CascadeMinimizer.cc[215] : (in function: improveOnce) - Minimization finished with status=0
CascadeMinimizer.cc[219] : (in function: improveOnce) - Minimization success! status=0
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_LOW_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_SIG_obsOnly: in 6 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_HIGH_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_LOW_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_SIG_obsOnly: in 6 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_HIGH_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
AsymptoticLimits.cc[428] : (in function: runLimitExpected) - Median for expected limits = 0.00500488, Sigma for expected limits = 0.00255356
AsymptoticLimits.cc[191] : (in function: runLimit) - NLL at global minimum of data = -301581 (r=5.08344e-11)
AsymptoticLimits.cc[211] : (in function: runLimit) - NLL at global minimum of asimov = -301578 (r=1.00295e-05)
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.200000:	q_mu = 2969.75320	q_A  = 2949.74014	Pmu = 0.00000	1-Pb  = 0.42691	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.600000:	q_mu = 1413.43014	q_A  = 1400.51125	Pmu = 0.00000	1-Pb  = 0.43148	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.300000:	q_mu = 672.52605	q_A  = 663.37979	Pmu = 0.00000	1-Pb  = 0.42954	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.150000:	q_mu = 315.51357	q_A  = 307.58334	Pmu = 0.00000	1-Pb  = 0.41057	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.075000:	q_mu = 146.62682	q_A  = 139.56511	Pmu = 0.00000	1-Pb  = 0.38252	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.037500:	q_mu = 67.35079	q_A  = 61.09833	Pmu = 0.00000	1-Pb  = 0.34460	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.018750:	q_mu = 30.82349	q_A  = 25.32889	Pmu = 0.00000	1-Pb  = 0.29257	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.009375:	q_mu = 14.21276	q_A  = 9.78702	Pmu = 0.00006	1-Pb  = 0.23968	CLs  = 0.00026
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.004688:	q_mu = 6.66082	q_A  = 3.47089	Pmu = 0.00327	1-Pb  = 0.19597	CLs  = 0.01670
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.002344:	q_mu = 3.18465	q_A  = 1.12105	Pmu = 0.02101	1-Pb  = 0.16490	CLs  = 0.12741
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.003676:	q_mu = 5.13001	q_A  = 2.36005	Pmu = 0.00739	1-Pb  = 0.18365	CLs  = 0.04023
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.003208:	q_mu = 4.43787	q_A  = 1.89233	Pmu = 0.01070	1-Pb  = 0.17742	CLs  = 0.06031
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.003475:	q_mu = 4.83148	q_A  = 2.15517	Pmu = 0.00867	1-Pb  = 0.18101	CLs  = 0.04788
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.003382:	q_mu = 4.69321	q_A  = 2.06185	Pmu = 0.00933	1-Pb  = 0.17976	CLs  = 0.05191
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.003435:	q_mu = 4.77211	q_A  = 2.11495	Pmu = 0.00895	1-Pb  = 0.18047	CLs  = 0.04957
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.003416:	q_mu = 4.74448	q_A  = 2.09630	Pmu = 0.00908	1-Pb  = 0.18022	CLs  = 0.05038
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.003427:	q_mu = 4.76027	q_A  = 2.10694	Pmu = 0.00900	1-Pb  = 0.18036	CLs  = 0.04991
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.003423:	q_mu = 4.75475	q_A  = 2.10321	Pmu = 0.00903	1-Pb  = 0.18031	CLs  = 0.05008
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.003425:	q_mu = 4.75791	q_A  = 2.10534	Pmu = 0.00901	1-Pb  = 0.18034	CLs  = 0.04998
