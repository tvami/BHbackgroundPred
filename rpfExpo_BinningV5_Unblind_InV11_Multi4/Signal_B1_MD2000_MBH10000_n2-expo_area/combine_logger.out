CascadeMinimizer.cc[188] : (in function: improveOnce) - Minimization configured with Type=Minuit2, Algo=Migrad, strategy=0, tolerance=0.1
CascadeMinimizer.cc[215] : (in function: improveOnce) - Minimization finished with status=0
CascadeMinimizer.cc[219] : (in function: improveOnce) - Minimization success! status=0
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_LOW_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_SIG_obsOnly: in 6 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_HIGH_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_LOW_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_SIG_obsOnly: in 6 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_HIGH_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
AsymptoticLimits.cc[415] : (in function: runLimitExpected) - [WARNING] Best fit of asimov dataset is at r = 0.022706 (0.001135 times rMax), while it should be at zero
AsymptoticLimits.cc[428] : (in function: runLimitExpected) - Median for expected limits = 8.1875, Sigma for expected limits = 4.17737
AsymptoticLimits.cc[191] : (in function: runLimit) - NLL at global minimum of data = -712652 (r=4.53515e-06)
AsymptoticLimits.cc[211] : (in function: runLimit) - NLL at global minimum of asimov = -712651 (r=0.00111841)
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 5.365107:	q_mu = 3.02745	q_A  = 2.20144	Pmu = 0.03903	1-Pb  = 0.39037	CLs  = 0.09998
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 10.730215:	q_mu = 6.24852	q_A  = 5.41912	Pmu = 0.00610	1-Pb  = 0.42931	CLs  = 0.01422
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 5.365110:	q_mu = 3.02732	q_A  = 2.20131	Pmu = 0.03903	1-Pb  = 0.39037	CLs  = 0.09998
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 8.047662:	q_mu = 4.61667	q_A  = 3.76189	Pmu = 0.01539	1-Pb  = 0.41280	CLs  = 0.03728
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 6.872623:	q_mu = 3.91494	q_A  = 3.06336	Pmu = 0.02310	1-Pb  = 0.40390	CLs  = 0.05720
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 7.403029:	q_mu = 4.23067	q_A  = 3.37618	Pmu = 0.01923	1-Pb  = 0.40807	CLs  = 0.04712
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 7.167075:	q_mu = 4.08998	q_A  = 3.23648	Pmu = 0.02086	1-Pb  = 0.40625	CLs  = 0.05136
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 7.272957:	q_mu = 4.15305	q_A  = 3.29906	Pmu = 0.02011	1-Pb  = 0.40707	CLs  = 0.04941
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 7.225739:	q_mu = 4.12491	q_A  = 3.27113	Pmu = 0.02044	1-Pb  = 0.40670	CLs  = 0.05027
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 7.246913:	q_mu = 4.13753	q_A  = 3.28365	Pmu = 0.02030	1-Pb  = 0.40687	CLs  = 0.04988
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 7.237469:	q_mu = 4.13190	q_A  = 3.27806	Pmu = 0.02036	1-Pb  = 0.40680	CLs  = 0.05005
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 7.241704:	q_mu = 4.13442	q_A  = 3.28056	Pmu = 0.02033	1-Pb  = 0.40683	CLs  = 0.04998
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 7.239816:	q_mu = 4.13330	q_A  = 3.27945	Pmu = 0.02035	1-Pb  = 0.40681	CLs  = 0.05001
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 7.240663:	q_mu = 4.13380	q_A  = 3.27995	Pmu = 0.02034	1-Pb  = 0.40682	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 7.240286:	q_mu = 4.13358	q_A  = 3.27973	Pmu = 0.02034	1-Pb  = 0.40682	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 7.240455:	q_mu = 4.13368	q_A  = 3.27983	Pmu = 0.02034	1-Pb  = 0.40682	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 7.240380:	q_mu = 4.13363	q_A  = 3.27978	Pmu = 0.02034	1-Pb  = 0.40682	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 7.240414:	q_mu = 4.13365	q_A  = 3.27980	Pmu = 0.02034	1-Pb  = 0.40682	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 7.240399:	q_mu = 4.13364	q_A  = 3.27979	Pmu = 0.02034	1-Pb  = 0.40682	CLs  = 0.05000
