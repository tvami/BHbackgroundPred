CascadeMinimizer.cc[188] : (in function: improveOnce) - Minimization configured with Type=Minuit2, Algo=Migrad, strategy=0, tolerance=0.1
CascadeMinimizer.cc[215] : (in function: improveOnce) - Minimization finished with status=0
CascadeMinimizer.cc[219] : (in function: improveOnce) - Minimization success! status=0
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_LOW_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_SIG_obsOnly: in 2 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_HIGH_obsOnly: in 5 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_LOW_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_SIG_obsOnly: in 2 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_HIGH_obsOnly: in 5 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
AsymptoticLimits.cc[428] : (in function: runLimitExpected) - Median for expected limits = 0.0178223, Sigma for expected limits = 0.00909316
AsymptoticLimits.cc[191] : (in function: runLimit) - NLL at global minimum of data = -108342 (r=2.98031e-10)
AsymptoticLimits.cc[211] : (in function: runLimit) - NLL at global minimum of asimov = -108342 (r=8.60796e-11)
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.200000:	q_mu = 334.12842	q_A  = 330.91257	Pmu = 0.00000	1-Pb  = 0.46478	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.600000:	q_mu = 161.61054	q_A  = 157.86989	Pmu = 0.00000	1-Pb  = 0.44083	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.300000:	q_mu = 77.59479	q_A  = 74.91094	Pmu = 0.00000	1-Pb  = 0.43839	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.150000:	q_mu = 37.07817	q_A  = 35.52486	Pmu = 0.00000	1-Pb  = 0.44816	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.075000:	q_mu = 18.01940	q_A  = 17.14780	Pmu = 0.00001	1-Pb  = 0.45809	CLs  = 0.00002
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.037500:	q_mu = 8.76958	q_A  = 8.29988	Pmu = 0.00153	1-Pb  = 0.46752	CLs  = 0.00326
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.018750:	q_mu = 4.29074	q_A  = 4.03890	Pmu = 0.01912	1-Pb  = 0.47502	CLs  = 0.04024
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.009375:	q_mu = 2.10892	q_A  = 1.97960	Pmu = 0.07312	1-Pb  = 0.48167	CLs  = 0.15181
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.014063:	q_mu = 3.19239	q_A  = 3.00036	Pmu = 0.03692	1-Pb  = 0.47790	CLs  = 0.07726
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.016564:	q_mu = 3.77701	q_A  = 3.55270	Pmu = 0.02593	1-Pb  = 0.47628	CLs  = 0.05443
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.017493:	q_mu = 3.99508	q_A  = 3.75904	Pmu = 0.02277	1-Pb  = 0.47573	CLs  = 0.04786
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.017055:	q_mu = 3.89210	q_A  = 3.66156	Pmu = 0.02420	1-Pb  = 0.47598	CLs  = 0.05085
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.017240:	q_mu = 3.93562	q_A  = 3.70274	Pmu = 0.02359	1-Pb  = 0.47587	CLs  = 0.04956
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.017152:	q_mu = 3.91500	q_A  = 3.68323	Pmu = 0.02388	1-Pb  = 0.47592	CLs  = 0.05017
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.017189:	q_mu = 3.92370	q_A  = 3.69146	Pmu = 0.02375	1-Pb  = 0.47590	CLs  = 0.04991
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.017172:	q_mu = 3.91958	q_A  = 3.68755	Pmu = 0.02381	1-Pb  = 0.47591	CLs  = 0.05003
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.017179:	q_mu = 3.92131	q_A  = 3.68920	Pmu = 0.02379	1-Pb  = 0.47591	CLs  = 0.04998
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.017176:	q_mu = 3.92049	q_A  = 3.68842	Pmu = 0.02380	1-Pb  = 0.47591	CLs  = 0.05001
