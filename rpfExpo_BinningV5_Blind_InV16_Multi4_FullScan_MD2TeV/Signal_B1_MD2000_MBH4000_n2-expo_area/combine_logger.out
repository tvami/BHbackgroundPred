CascadeMinimizer.cc[188] : (in function: improveOnce) - Minimization configured with Type=Minuit2, Algo=Migrad, strategy=0, tolerance=0.1
CascadeMinimizer.cc[215] : (in function: improveOnce) - Minimization finished with status=0
CascadeMinimizer.cc[219] : (in function: improveOnce) - Minimization success! status=0
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_LOW_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_SIG_obsOnly: in 2 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_HIGH_obsOnly: in 5 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_LOW_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_SIG_obsOnly: in 2 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_HIGH_obsOnly: in 5 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
AsymptoticLimits.cc[428] : (in function: runLimitExpected) - Median for expected limits = 0.000148773, Sigma for expected limits = 7.59061e-05
AsymptoticLimits.cc[191] : (in function: runLimit) - NLL at global minimum of data = -4.36143e+06 (r=9.86876e-13)
AsymptoticLimits.cc[211] : (in function: runLimit) - NLL at global minimum of asimov = -4.36142e+06 (r=2.83866e-08)
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.200000:	q_mu = 4059382.92001	q_A  = 4059673.73690	Pmu = 0.00000	1-Pb  = 0.52877	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.600000:	q_mu = 1895933.49021	q_A  = 1896211.51568	Pmu = 0.00000	1-Pb  = 0.54021	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.300000:	q_mu = 863008.66730	q_A  = 863118.58066	Pmu = 0.00000	1-Pb  = 0.52359	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.150000:	q_mu = 381174.36127	q_A  = 381137.52786	Pmu = 0.00000	1-Pb  = 0.48810	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.075000:	q_mu = 152963.10745	q_A  = 152928.28965	Pmu = 0.00000	1-Pb  = 0.48225	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.037500:	q_mu = 60062.63049	q_A  = 60005.92200	Pmu = 0.00000	1-Pb  = 0.45393	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.018750:	q_mu = 21183.23644	q_A  = 21104.13314	Pmu = 0.00000	1-Pb  = 0.39271	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.009375:	q_mu = 6325.59567	q_A  = 6267.88475	Pmu = 0.00000	1-Pb  = 0.35775	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.004688:	q_mu = 1611.21791	q_A  = 1560.88973	Pmu = 0.00000	1-Pb  = 0.26208	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.002344:	q_mu = 325.51137	q_A  = 308.09023	Pmu = 0.00000	1-Pb  = 0.30986	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.001172:	q_mu = 51.80281	q_A  = 50.81190	Pmu = 0.00000	1-Pb  = 0.47229	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000586:	q_mu = 11.28947	q_A  = 14.43528	Pmu = 0.00039	1-Pb  = 0.66981	CLs  = 0.00058
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000293:	q_mu = 5.57174	q_A  = 7.18215	Pmu = 0.00913	1-Pb  = 0.62533	CLs  = 0.01459
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000146:	q_mu = 6.58356	q_A  = 3.77383	Pmu = 0.00384	1-Pb  = 0.23479	CLs  = 0.01636
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000073:	q_mu = 5.02059	q_A  = 1.42327	Pmu = 0.00346	1-Pb  = 0.06582	CLs  = 0.05257
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000090:	q_mu = 5.78364	q_A  = 1.95814	Pmu = 0.00284	1-Pb  = 0.08583	CLs  = 0.03304
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000078:	q_mu = 5.26401	q_A  = 1.57247	Pmu = 0.00321	1-Pb  = 0.07052	CLs  = 0.04547
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000076:	q_mu = 5.13913	q_A  = 1.49386	Pmu = 0.00333	1-Pb  = 0.06795	CLs  = 0.04899
