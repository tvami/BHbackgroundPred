CascadeMinimizer.cc[188] : (in function: improveOnce) - Minimization configured with Type=Minuit2, Algo=Migrad, strategy=0, tolerance=0.1
CascadeMinimizer.cc[215] : (in function: improveOnce) - Minimization finished with status=0
CascadeMinimizer.cc[219] : (in function: improveOnce) - Minimization success! status=0
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_LOW_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_SIG_obsOnly: in 2 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_HIGH_obsOnly: in 5 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_LOW_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_SIG_obsOnly: in 2 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_HIGH_obsOnly: in 5 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
AsymptoticLimits.cc[428] : (in function: runLimitExpected) - Median for expected limits = 0.000675201, Sigma for expected limits = 0.000344497
AsymptoticLimits.cc[191] : (in function: runLimit) - NLL at global minimum of data = -144277 (r=1.79765e-13)
AsymptoticLimits.cc[211] : (in function: runLimit) - NLL at global minimum of asimov = -144241 (r=8.4774e-09)
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.200000:	q_mu = 34925.95605	q_A  = 35480.66273	Pmu = 0.00000	1-Pb  = 0.93033	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.600000:	q_mu = 16516.28778	q_A  = 16900.31715	Pmu = 0.00000	1-Pb  = 0.93130	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.300000:	q_mu = 7694.66094	q_A  = 7966.96415	Pmu = 0.00000	1-Pb  = 0.93805	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.150000:	q_mu = 3544.25541	q_A  = 3510.05531	Pmu = 0.00000	1-Pb  = 0.38643	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.075000:	q_mu = 1593.60843	q_A  = 1569.53316	Pmu = 0.00000	1-Pb  = 0.38062	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.037500:	q_mu = 714.61297	q_A  = 699.13881	Pmu = 0.00000	1-Pb  = 0.38491	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.018750:	q_mu = 306.95799	q_A  = 299.61646	Pmu = 0.00000	1-Pb  = 0.41603	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.009375:	q_mu = 124.73350	q_A  = 122.56918	Pmu = 0.00000	1-Pb  = 0.46107	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.004688:	q_mu = 50.41950	q_A  = 48.04706	Pmu = 0.00000	1-Pb  = 0.43206	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.002344:	q_mu = 20.23593	q_A  = 17.80312	Pmu = 0.00000	1-Pb  = 0.38656	CLs  = 0.00001
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.001172:	q_mu = 9.28594	q_A  = 7.46860	Pmu = 0.00109	1-Pb  = 0.36976	CLs  = 0.00294
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000586:	q_mu = 4.50721	q_A  = 3.22638	Pmu = 0.01567	1-Pb  = 0.36072	CLs  = 0.04344
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000293:	q_mu = 2.10762	q_A  = 1.35565	Pmu = 0.06847	1-Pb  = 0.37338	CLs  = 0.18339
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000439:	q_mu = 3.28868	q_A  = 2.24778	Pmu = 0.03242	1-Pb  = 0.36424	CLs  = 0.08900
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000534:	q_mu = 4.07016	q_A  = 2.86914	Pmu = 0.02026	1-Pb  = 0.36147	CLs  = 0.05605
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000563:	q_mu = 4.31433	q_A  = 3.06778	Pmu = 0.01754	1-Pb  = 0.36098	CLs  = 0.04860
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000552:	q_mu = 4.22659	q_A  = 2.99625	Pmu = 0.01847	1-Pb  = 0.36115	CLs  = 0.05115
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000558:	q_mu = 4.27536	q_A  = 3.03607	Pmu = 0.01795	1-Pb  = 0.36106	CLs  = 0.04972
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000556:	q_mu = 4.25777	q_A  = 3.02175	Pmu = 0.01814	1-Pb  = 0.36110	CLs  = 0.05023
