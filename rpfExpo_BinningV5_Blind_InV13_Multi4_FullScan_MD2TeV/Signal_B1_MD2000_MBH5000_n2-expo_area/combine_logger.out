CascadeMinimizer.cc[188] : (in function: improveOnce) - Minimization configured with Type=Minuit2, Algo=Migrad, strategy=0, tolerance=0.1
CascadeMinimizer.cc[215] : (in function: improveOnce) - Minimization finished with status=0
CascadeMinimizer.cc[219] : (in function: improveOnce) - Minimization success! status=0
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_LOW_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_SIG_obsOnly: in 2 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_HIGH_obsOnly: in 5 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_LOW_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_SIG_obsOnly: in 2 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_HIGH_obsOnly: in 5 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
AsymptoticLimits.cc[428] : (in function: runLimitExpected) - Median for expected limits = 0.000133514, Sigma for expected limits = 6.81208e-05
AsymptoticLimits.cc[191] : (in function: runLimit) - NLL at global minimum of data = -765003 (r=4.00329e-12)
AsymptoticLimits.cc[211] : (in function: runLimit) - NLL at global minimum of asimov = -765005 (r=6.9667e-07)
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.200000:	q_mu = 491647.65455	q_A  = 491809.27605	Pmu = 0.00000	1-Pb  = 0.54587	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.600000:	q_mu = 231298.19405	q_A  = 231442.73648	Pmu = 0.00000	1-Pb  = 0.55972	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.300000:	q_mu = 106704.72977	q_A  = 106818.67339	Pmu = 0.00000	1-Pb  = 0.56921	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.150000:	q_mu = 48486.00199	q_A  = 48553.08754	Pmu = 0.00000	1-Pb  = 0.56052	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.075000:	q_mu = 21420.47886	q_A  = 21441.09823	Pmu = 0.00000	1-Pb  = 0.52807	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.037500:	q_mu = 9370.44029	q_A  = 9357.33660	Pmu = 0.00000	1-Pb  = 0.47300	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.018750:	q_mu = 4059.77565	q_A  = 4024.44944	Pmu = 0.00000	1-Pb  = 0.39034	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.009375:	q_mu = 1791.99267	q_A  = 1749.46777	Pmu = 0.00000	1-Pb  = 0.30560	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.004688:	q_mu = 800.20747	q_A  = 761.27594	Pmu = 0.00000	1-Pb  = 0.24025	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.002344:	q_mu = 351.26121	q_A  = 319.27711	Pmu = 0.00000	1-Pb  = 0.18540	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.001172:	q_mu = 147.82413	q_A  = 124.02658	Pmu = 0.00000	1-Pb  = 0.14266	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000586:	q_mu = 60.74844	q_A  = 44.63913	Pmu = 0.00000	1-Pb  = 0.11399	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000293:	q_mu = 24.90734	q_A  = 14.89085	Pmu = 0.00000	1-Pb  = 0.09717	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000146:	q_mu = 10.42681	q_A  = 4.61797	Pmu = 0.00023	1-Pb  = 0.08826	CLs  = 0.00263
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000073:	q_mu = 4.53920	q_A  = 1.34042	Pmu = 0.00556	1-Pb  = 0.08357	CLs  = 0.06647
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000110:	q_mu = 7.34344	q_A  = 2.78455	Pmu = 0.00120	1-Pb  = 0.08597	CLs  = 0.01400
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000092:	q_mu = 5.90349	q_A  = 2.00943	Pmu = 0.00263	1-Pb  = 0.08479	CLs  = 0.03098
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000082:	q_mu = 5.20918	q_A  = 1.65990	Pmu = 0.00384	1-Pb  = 0.08419	CLs  = 0.04561
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000079:	q_mu = 4.94222	q_A  = 1.53041	Pmu = 0.00445	1-Pb  = 0.08395	CLs  = 0.05298
