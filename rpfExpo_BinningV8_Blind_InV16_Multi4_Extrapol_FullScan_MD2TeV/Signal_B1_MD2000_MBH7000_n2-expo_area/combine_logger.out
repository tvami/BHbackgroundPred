CascadeMinimizer.cc[188] : (in function: improveOnce) - Minimization configured with Type=Minuit2, Algo=Migrad, strategy=0, tolerance=0.1
CascadeMinimizer.cc[215] : (in function: improveOnce) - Minimization finished with status=0
CascadeMinimizer.cc[219] : (in function: improveOnce) - Minimization success! status=0
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_LOW_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_SIG_obsOnly: in 2 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_HIGH_obsOnly: in 5 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_LOW_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_SIG_obsOnly: in 2 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_HIGH_obsOnly: in 5 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
AsymptoticLimits.cc[428] : (in function: runLimitExpected) - Median for expected limits = 0.001091, Sigma for expected limits = 0.000556645
AsymptoticLimits.cc[191] : (in function: runLimit) - NLL at global minimum of data = -144816 (r=1.37761e-09)
AsymptoticLimits.cc[211] : (in function: runLimit) - NLL at global minimum of asimov = -144780 (r=4.69811e-06)
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.200000:	q_mu = 34921.07442	q_A  = 35478.30446	Pmu = 0.00000	1-Pb  = 0.93123	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.600000:	q_mu = 16511.40364	q_A  = 16897.64625	Pmu = 0.00000	1-Pb  = 0.93244	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.300000:	q_mu = 7689.76994	q_A  = 7963.98382	Pmu = 0.00000	1-Pb  = 0.93941	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.150000:	q_mu = 3539.36159	q_A  = 3507.20399	Pmu = 0.00000	1-Pb  = 0.39300	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.075000:	q_mu = 1588.70854	q_A  = 1566.44925	Pmu = 0.00000	1-Pb  = 0.38928	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.037500:	q_mu = 709.73506	q_A  = 695.85913	Pmu = 0.00000	1-Pb  = 0.39627	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.018750:	q_mu = 302.04659	q_A  = 296.11117	Pmu = 0.00000	1-Pb  = 0.43154	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.009375:	q_mu = 119.81162	q_A  = 118.88160	Pmu = 0.00000	1-Pb  = 0.48299	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.004688:	q_mu = 45.49843	q_A  = 44.06248	Pmu = 0.00000	1-Pb  = 0.45693	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.002344:	q_mu = 15.30824	q_A  = 13.57699	Pmu = 0.00004	1-Pb  = 0.40713	CLs  = 0.00011
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.001172:	q_mu = 5.78743	q_A  = 4.26090	Pmu = 0.00747	1-Pb  = 0.35578	CLs  = 0.02099
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000586:	q_mu = 3.45170	q_A  = 1.63484	Pmu = 0.02335	1-Pb  = 0.23870	CLs  = 0.09780
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000907:	q_mu = 4.94100	q_A  = 3.09375	Pmu = 0.01119	1-Pb  = 0.29975	CLs  = 0.03731
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000765:	q_mu = 4.38114	q_A  = 2.45477	Pmu = 0.01457	1-Pb  = 0.26936	CLs  = 0.05410
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000818:	q_mu = 4.60822	q_A  = 2.69668	Pmu = 0.01307	1-Pb  = 0.28028	CLs  = 0.04663
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000787:	q_mu = 4.47993	q_A  = 2.55733	Pmu = 0.01389	1-Pb  = 0.27388	CLs  = 0.05073
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000798:	q_mu = 4.52412	q_A  = 2.60424	Pmu = 0.01360	1-Pb  = 0.27597	CLs  = 0.04928
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000794:	q_mu = 4.50649	q_A  = 2.58548	Pmu = 0.01372	1-Pb  = 0.27514	CLs  = 0.04985
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000791:	q_mu = 4.49766	q_A  = 2.57602	Pmu = 0.01377	1-Pb  = 0.27471	CLs  = 0.05014
