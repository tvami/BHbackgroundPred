CascadeMinimizer.cc[188] : (in function: improveOnce) - Minimization configured with Type=Minuit2, Algo=Migrad, strategy=0, tolerance=0.1
CascadeMinimizer.cc[215] : (in function: improveOnce) - Minimization finished with status=0
CascadeMinimizer.cc[219] : (in function: improveOnce) - Minimization success! status=0
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_LOW_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_SIG_obsOnly: in 2 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_HIGH_obsOnly: in 5 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_LOW_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_SIG_obsOnly: in 2 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_HIGH_obsOnly: in 5 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
AsymptoticLimits.cc[428] : (in function: runLimitExpected) - Median for expected limits = 0.00216675, Sigma for expected limits = 0.0011055
AsymptoticLimits.cc[191] : (in function: runLimit) - NLL at global minimum of data = -188194 (r=2.58087e-10)
AsymptoticLimits.cc[211] : (in function: runLimit) - NLL at global minimum of asimov = -188184 (r=1.45569e-08)
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.200000:	q_mu = 66933.20713	q_A  = 66844.58708	Pmu = 0.00000	1-Pb  = 0.43196	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.600000:	q_mu = 29579.05067	q_A  = 29486.14877	Pmu = 0.00000	1-Pb  = 0.39338	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.300000:	q_mu = 12435.20251	q_A  = 12346.26500	Pmu = 0.00000	1-Pb  = 0.34450	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.150000:	q_mu = 4789.85134	q_A  = 4859.72204	Pmu = 0.00000	1-Pb  = 0.69250	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.075000:	q_mu = 1748.65234	q_A  = 1744.61242	Pmu = 0.00000	1-Pb  = 0.48071	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.037500:	q_mu = 569.99960	q_A  = 569.39390	Pmu = 0.00000	1-Pb  = 0.49494	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.018750:	q_mu = 165.51761	q_A  = 166.01797	Pmu = 0.00000	1-Pb  = 0.50775	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.009375:	q_mu = 37.96888	q_A  = 40.37476	Pmu = 0.00000	1-Pb  = 0.57622	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.004688:	q_mu = 10.37326	q_A  = 11.69572	Pmu = 0.00064	1-Pb  = 0.57893	CLs  = 0.00110
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.002344:	q_mu = 4.09434	q_A  = 4.18417	Pmu = 0.02151	1-Pb  = 0.50881	CLs  = 0.04228
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.001172:	q_mu = 2.69036	q_A  = 1.98257	Pmu = 0.04852	1-Pb  = 0.40078	CLs  = 0.12106
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.001960:	q_mu = 3.67606	q_A  = 3.47216	Pmu = 0.02755	1-Pb  = 0.47818	CLs  = 0.05761
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.002177:	q_mu = 3.90363	q_A  = 3.86510	Pmu = 0.02409	1-Pb  = 0.49609	CLs  = 0.04856
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.002104:	q_mu = 3.82412	q_A  = 3.73104	Pmu = 0.02525	1-Pb  = 0.49039	CLs  = 0.05149
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.002134:	q_mu = 3.85567	q_A  = 3.78420	Pmu = 0.02478	1-Pb  = 0.49267	CLs  = 0.05031
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.002148:	q_mu = 3.87175	q_A  = 3.81130	Pmu = 0.02455	1-Pb  = 0.49382	CLs  = 0.04971
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.002140:	q_mu = 3.86224	q_A  = 3.79532	Pmu = 0.02469	1-Pb  = 0.49315	CLs  = 0.05006
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.002143:	q_mu = 3.86548	q_A  = 3.80076	Pmu = 0.02464	1-Pb  = 0.49338	CLs  = 0.04994
