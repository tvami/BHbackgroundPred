CascadeMinimizer.cc[188] : (in function: improveOnce) - Minimization configured with Type=Minuit2, Algo=Migrad, strategy=0, tolerance=0.1
CascadeMinimizer.cc[215] : (in function: improveOnce) - Minimization finished with status=0
CascadeMinimizer.cc[219] : (in function: improveOnce) - Minimization success! status=0
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_LOW_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_SIG_obsOnly: in 6 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_HIGH_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_LOW_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_SIG_obsOnly: in 6 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_HIGH_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
AsymptoticLimits.cc[428] : (in function: runLimitExpected) - Median for expected limits = 0.511719, Sigma for expected limits = 0.261086
AsymptoticLimits.cc[191] : (in function: runLimit) - NLL at global minimum of data = -379316 (r=2.97693e-08)
AsymptoticLimits.cc[211] : (in function: runLimit) - NLL at global minimum of asimov = -379316 (r=9.33528e-06)
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.200000:	q_mu = 12.12178	q_A  = 10.37073	Pmu = 0.00024	1-Pb  = 0.39286	CLs  = 0.00061
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.600000:	q_mu = 6.00966	q_A  = 4.65100	Pmu = 0.00673	1-Pb  = 0.37638	CLs  = 0.01787
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.300000:	q_mu = 2.99050	q_A  = 1.99978	Pmu = 0.03883	1-Pb  = 0.36306	CLs  = 0.10695
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.461984:	q_mu = 4.61730	q_A  = 3.40311	Pmu = 0.01486	1-Pb  = 0.37104	CLs  = 0.04004
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.400300:	q_mu = 3.99686	q_A  = 2.85922	Pmu = 0.02131	1-Pb  = 0.36829	CLs  = 0.05788
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.432236:	q_mu = 4.31795	q_A  = 3.13958	Pmu = 0.01767	1-Pb  = 0.36975	CLs  = 0.04779
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.419824:	q_mu = 4.19312	q_A  = 3.03029	Pmu = 0.01900	1-Pb  = 0.36919	CLs  = 0.05147
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.426196:	q_mu = 4.25718	q_A  = 3.08632	Pmu = 0.01831	1-Pb  = 0.36948	CLs  = 0.04955
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.423712:	q_mu = 4.23219	q_A  = 3.06445	Pmu = 0.01858	1-Pb  = 0.36937	CLs  = 0.05029
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.424986:	q_mu = 4.24500	q_A  = 3.07566	Pmu = 0.01844	1-Pb  = 0.36942	CLs  = 0.04991
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.424489:	q_mu = 4.24001	q_A  = 3.07129	Pmu = 0.01849	1-Pb  = 0.36940	CLs  = 0.05006
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.424744:	q_mu = 4.24257	q_A  = 3.07354	Pmu = 0.01846	1-Pb  = 0.36941	CLs  = 0.04998
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.424645:	q_mu = 4.24157	q_A  = 3.07266	Pmu = 0.01847	1-Pb  = 0.36941	CLs  = 0.05001
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.424696:	q_mu = 4.24209	q_A  = 3.07311	Pmu = 0.01847	1-Pb  = 0.36941	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.424676:	q_mu = 4.24189	q_A  = 3.07294	Pmu = 0.01847	1-Pb  = 0.36941	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.424686:	q_mu = 4.24199	q_A  = 3.07303	Pmu = 0.01847	1-Pb  = 0.36941	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.424682:	q_mu = 4.24195	q_A  = 3.07299	Pmu = 0.01847	1-Pb  = 0.36941	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.424684:	q_mu = 4.24197	q_A  = 3.07301	Pmu = 0.01847	1-Pb  = 0.36941	CLs  = 0.05000
