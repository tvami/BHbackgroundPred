CascadeMinimizer.cc[188] : (in function: improveOnce) - Minimization configured with Type=Minuit2, Algo=Migrad, strategy=0, tolerance=0.1
CascadeMinimizer.cc[215] : (in function: improveOnce) - Minimization finished with status=0
CascadeMinimizer.cc[219] : (in function: improveOnce) - Minimization success! status=0
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_LOW_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_SIG_obsOnly: in 2 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_HIGH_obsOnly: in 5 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_LOW_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_SIG_obsOnly: in 2 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_HIGH_obsOnly: in 5 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
AsymptoticLimits.cc[428] : (in function: runLimitExpected) - Median for expected limits = 0.00942993, Sigma for expected limits = 0.00481128
AsymptoticLimits.cc[191] : (in function: runLimit) - NLL at global minimum of data = -614011 (r=8.55165e-09)
AsymptoticLimits.cc[211] : (in function: runLimit) - NLL at global minimum of asimov = -614010 (r=9.04722e-06)
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.200000:	q_mu = 2990.65173	q_A  = 2970.01858	Pmu = 0.00000	1-Pb  = 0.42493	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.600000:	q_mu = 1247.21681	q_A  = 1237.36019	Pmu = 0.00000	1-Pb  = 0.44429	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.300000:	q_mu = 501.09657	q_A  = 497.05143	Pmu = 0.00000	1-Pb  = 0.46386	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.150000:	q_mu = 182.57362	q_A  = 177.60052	Pmu = 0.00000	1-Pb  = 0.42599	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.075000:	q_mu = 60.28784	q_A  = 55.01905	Pmu = 0.00000	1-Pb  = 0.36123	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.037500:	q_mu = 21.52141	q_A  = 16.99702	Pmu = 0.00000	1-Pb  = 0.29160	CLs  = 0.00001
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.018750:	q_mu = 12.43904	q_A  = 8.51822	Pmu = 0.00017	1-Pb  = 0.25089	CLs  = 0.00066
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.009375:	q_mu = 6.86946	q_A  = 3.81688	Pmu = 0.00312	1-Pb  = 0.21733	CLs  = 0.01435
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.004688:	q_mu = 3.51552	q_A  = 1.41344	Pmu = 0.01909	1-Pb  = 0.18833	CLs  = 0.10136
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.007031:	q_mu = 5.23549	q_A  = 2.58193	Pmu = 0.00750	1-Pb  = 0.20449	CLs  = 0.03666
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.005990:	q_mu = 4.48095	q_A  = 2.04910	Pmu = 0.01128	1-Pb  = 0.19782	CLs  = 0.05701
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.006446:	q_mu = 4.81323	q_A  = 2.28028	Pmu = 0.00942	1-Pb  = 0.20082	CLs  = 0.04690
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.006235:	q_mu = 4.65994	q_A  = 2.17293	Pmu = 0.01023	1-Pb  = 0.19945	CLs  = 0.05131
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.006326:	q_mu = 4.72594	q_A  = 2.21900	Pmu = 0.00987	1-Pb  = 0.20004	CLs  = 0.04936
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.006284:	q_mu = 4.69518	q_A  = 2.19748	Pmu = 0.01004	1-Pb  = 0.19977	CLs  = 0.05026
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.006302:	q_mu = 4.70837	q_A  = 2.20670	Pmu = 0.00997	1-Pb  = 0.19988	CLs  = 0.04987
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.006293:	q_mu = 4.70222	q_A  = 2.20240	Pmu = 0.01000	1-Pb  = 0.19983	CLs  = 0.05005
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.006297:	q_mu = 4.70486	q_A  = 2.20425	Pmu = 0.00999	1-Pb  = 0.19985	CLs  = 0.04997
